from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
from aiogram import F, Router
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from datetime import datetime, timedelta

import handlers.keyboards as kb
import database.requests as rq
router = Router()


class AddedTask(StatesGroup):
    task = State()
    deadline = State()

class AddedTeste(StatesGroup):
    task = State()

class AddedOffice(StatesGroup):
    tg_id = State()
    task = State()
    deadline = State()

@router.callback_query(F.data == 'stop_write')
async def back_button(callback: CallbackQuery, state: FSMContext):
    if await rq.check_user(callback.from_user.id):
        await callback.answer()
        await state.clear()
        await callback.message.edit_text('–£–ø—Å! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ. –ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –≥–æ–¥–Ω—É—é –∫–æ–º–∞–Ω–¥—É.')

@router.message(CommandStart())
async def cmd_start(message: Message):
    if await rq.check_user(message.from_user.id) is True:
        if message.chat.type == 'private':
            await message.answer('–ü—Ä–∏–≤–µ—Ç, –≥–∞–π–∑!üíÖ\n–≠—Ç–æ –±–æ—Ç-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –æ—Ñ–∏—Å-–º–µ–Ω–µ–¥–∂–µ—Ä–∞ Spot Film\n'
                            '–Ø –ø–æ–º–æ–≥–∞—é –ø–æ–ª—É—á–∞—Ç—å –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤—Å–µ –≤–∞—à–∏ –∑–∞–ø—Ä–æ—Å—ã, —á—Ç–æ–±—ã –º—ã –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ—Ç–µ—Ä—è–ª–∏ –∏ –Ω–µ —É–ø—É—Å—Ç–∏–ª–∏‚ö°Ô∏è', reply_markup=kb.main)
        else:
            await message.answer('–ü—Ä–∏–≤–µ—Ç, –≥–∞–π–∑!üíÖ\n–≠—Ç–æ –±–æ—Ç-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –æ—Ñ–∏—Å-–º–µ–Ω–µ–¥–∂–µ—Ä–∞ Spot Film\n'
                            '–Ø –ø–æ–º–æ–≥–∞—é –ø–æ–ª—É—á–∞—Ç—å –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤—Å–µ –≤–∞—à–∏ –∑–∞–ø—Ä–æ—Å—ã, —á—Ç–æ–±—ã –º—ã –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ—Ç–µ—Ä—è–ª–∏ –∏ –Ω–µ —É–ø—É—Å—Ç–∏–ª–∏‚ö°Ô∏è')
    else:
        await message.answer('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–µ–±—è –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ ‚òπ\n–î–ª—è –∑–∞–ø–∏—Å–∏ - –æ–±—Ä–∞—Ç–∏—Å—å –∫ –æ—Ñ–∏—Å –º–µ–Ω–µ–¥–∂–µ—Ä—É')

@router.message(AddedTeste.task)
async def taste_end(message: Message, state: FSMContext):
    if message.text not in ['Spot the Tasteüòã','Spot the Studio‚úè', 'Spot the new ideaüí°']:
        await state.update_data(task=message.text)
        await rq.add_task(tg_id=message.chat.id, task=message.text, deadline='', type_task='taste')
        await message.answer('C–ø–∞—Å–∏–±–æ, —Ç–≤–æ–µ –ø–æ–∂–µ–ª–∞–Ω–∏–µ –∫–∞–∫ –º–∏–Ω–∏–º—É–º –∑–∞—Ä–µ–≥–∞–Ω–æü§å\n–ü—Ä–∏—à–ª–µ–º –ø–æ –∞–ø–¥–µ–π—Ç–∞–º –∏–Ω—Ñ—É –µ—â–µ))\n–ü—É—Å—Ç—å –≤—Å–µ–º –±—É–¥–µ—Ç –≤–∫—É—Å–Ω–æ!')
        await state.clear()
    else:
        await message.answer('–£–ø—Å! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ. –ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –≥–æ–¥–Ω—É—é –∫–æ–º–∞–Ω–¥—É.')
        await state.clear()

@router.message(AddedOffice.task)
async def studio_task(message: Message, state: FSMContext):
    if message.text not in ['Spot the Tasteüòã', 'Spot the Studio‚úè', 'Spot the new ideaüí°']:
        await state.update_data(tg_id=message.from_user.id)
        await state.update_data(task=message.text)
        await state.set_state(AddedOffice.deadline)
        await message.answer('–ö–æ–≥–¥–∞ –Ω–∞–¥–æ?\n[–û—Ç–≤–µ—Ç ""–≤—á–µ—Ä–∞"" –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –≤ –æ—á–µ–Ω—å –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö))]', reply_markup=kb.keyboard_deadline)
    else:
        await message.answer('–£–ø—Å! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ. –ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –≥–æ–¥–Ω—É—é –∫–æ–º–∞–Ω–¥—É.')
        await state.clear()

@router.callback_query(AddedOffice.deadline)
async def studio_end(callback: CallbackQuery, state: FSMContext):
    if callback.data == 'stop_write':
        await callback.answer('')
        await state.clear()
        await back_button(callback)
    else:
        await callback.answer()
        deadline = (datetime.now() + timedelta(days=int(callback.data))).strftime("%d.%m.%Y")
        data = await state.get_data()
        tg_id = data.get("tg_id")
        task = data.get("task") 
        await rq.add_task(tg_id=int(tg_id), task=task, deadline=deadline, type_task='office')
        await callback.message.edit_text(f'–ó–∞–¥–∞—á–∞ {task} –∑–∞–ø–∏—Å–∞–Ω–∞\n–ü–ª–∞–Ω–∏—Ä—É–µ–º–∞—è –¥–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: –¥–æ {deadline}\n–°–ø–∞—Å–∏–±–æ!')
        await state.clear()

@router.message(AddedTask.task)
async def idea_task(message: Message, state: FSMContext):
    if message.text not in ['Spot the Tasteüòã', 'Spot the Studio‚úè', 'Spot the new ideaüí°']:
        await state.update_data(tg_id=message.from_user.id)
        await state.update_data(task=message.text)
        await state.set_state(AddedTask.deadline)
        await message.answer('–í—ã–±–µ—Ä–∏ —Å—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è', reply_markup=kb.keyboard_deadline)
    else:
        await message.answer('–£–ø—Å! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ. –ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –≥–æ–¥–Ω—É—é –∫–æ–º–∞–Ω–¥—É.')
        await state.clear()

@router.callback_query(AddedTask.deadline)
async def idea_end(callback: CallbackQuery, state: FSMContext):
    if callback.data == 'stop_write':
        await callback.answer('')
        await state.clear()
        await back_button(callback)
    else:
        await callback.answer()
        deadline = (datetime.now() + timedelta(days=int(callback.data))).strftime("%d.%m.%Y")
        data = await state.get_data()
        tg_id = data.get("tg_id")
        task = data.get("task") 
        await rq.add_task(tg_id=int(tg_id), task=task, deadline=deadline, type_task='idea')
        await callback.message.edit_text(f'–ó–∞–¥–∞—á–∞ {task} –∑–∞–ø–∏—Å–∞–Ω–∞\n–ü–ª–∞–Ω–∏—Ä—É–µ–º–∞—è –¥–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: –¥–æ {deadline}\n–°–ø–∞—Å–∏–±–æ!')
        await state.clear()

@router.message(F.text == 'Spot the Tasteüòã')
async def tast–µ_start(message: Message, state: FSMContext):
    if await rq.check_user(message.from_user.id) and message.chat.type == 'private':
        await state.set_state(AddedTeste.task)
        await message.answer('–ß–æ –ø–æ –µ–¥–µ?\n–í–≤–µ–¥–∏—Ç–µ —á—Ç–æ —Ö–∂–µ–ª–∞–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –∏–∑ –µ–¥—ã –∏–ª–∏ –Ω–∞–ø–∏—Ç–∫–æ–≤.\n–ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–∏—Ç–µ —Å—Å—ã–ª–∫–∏ +100500 –∫ –∫–∞—Ä–º–µ‚ú®', reply_markup=kb.back)

@router.message(F.text == 'Spot the Studio‚úè')
async def studio_start(message: Message, state: FSMContext):
    if await rq.check_user(message.from_user.id) and message.chat.type == 'private':
        await state.set_state(AddedOffice.task)
        await message.answer('–°–º–æ—Ç—Ä–∏–º –Ω–∏—à—Ç—è–∫–∏ –¥–ª—è –æ—Ñ–∏—Å–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –±—É–º–∞–≥–∞ –∏–ª–∏  –∫–∞—Ä—Ç—Ä–∏–¥–∂–∏, –∞ –º–± –≤–æ–æ–±—â–µ —Ç—É—Ä–Ω–∏–∫?\n–ü–∏—à–∏—Ç–µ —á–æ –Ω—É–∂–Ω–æüßê\n\n[—Ç–µ –∫—Ç–æ –ø—Ä–∏–∫–ª–∞–¥—ã–≤–∞–µ—Ç —Å—Å—ã–ª–∫–∏, –º–æ–∏ —Å–∞–º—ã–µ –ª—É—Ç—à–∏–µ)))]', 
                            reply_markup=kb.back)

@router.message(F.text == 'Spot the new ideaüí°')
async def idea_start(message: Message, state: FSMContext):
    if await rq.check_user(message.from_user.id) and message.chat.type == 'private':
        await state.set_state(AddedTask.task)
        await message.answer('–ú—ã —Ä–∞–¥—ã –ª—é–±–æ–º—É –∫—Ä–µ–∞—Ç–∏–≤—É (–ø–æ—á—Ç–∏!)\n–í–æ–∑–º–æ–∂–Ω–æ –Ω–∞–º –Ω—É–∂–µ–Ω –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π? –ê –º–± —Å—ä–µ–∑–¥–∏—Ç—å –≤—Å–µ–π –∫–æ–º–∞–Ω–¥–æ–π –Ω–∞ –≥–ª—ç–º–ø–∏–Ω–≥? –ê –º–± —Å—Ö–æ–¥–∏—Ç—å –Ω–∞ –ª–µ–∫—Ü–∏—é?\n'
                            '–í –æ–±—â–µ–º –ø–∏—à–∏ –≤—Å–∏–æ: —Å–≤–æ–∏ –∏–¥–µ—é/–∑–∞–¥–∞—á—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å))', reply_markup=kb.back)

@router.message(F.text == '–í—Å–ø–æ–º–Ω–∏—Ç—å –≤—Å—ëüìù')
async def get_all_tasks(message: Message):
    if await rq.check_user(message.from_user.id) and message.chat.type == 'private':
        tasks = await rq.get_all_my_tasks(int(message.chat.id))
        if len(tasks) == 0:
            await message.answer('–û—Ç —Ç–µ–±—è —á–æ—Ç–∞ –ø–æ–∫–∞ –Ω–∏—á–æ –Ω–µ –ø—Ä–∏–ª–µ—Ç–∞–ª–æü•≤ (–∏ —Å–ª–∞–≤–∞ –±–æ–≥—É!)')
        else:
            for task in tasks:
                await message.answer(f'–ù–æ–º–µ—Ä –∑–∞–¥–∞—á–∏: {task.id}\n–ó–∞–¥–∞—á–∞: {task.task}\n–°—Ç–∞—Ç—É—Å: –í —Ä–∞–±–æ—Ç–µ')

@router.message(F.text == '–ö—É–¥–∞ –∑–∞–Ω–æ—Å–∏—Ç—å –∫—ç—à ? üßê')
async def cash(message: Message):
    if await rq.check_user(message.from_user.id) and message.chat.type == 'private':
        await message.answer('–®—Ç–æ—à...\n–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –∫—ç—à –º–æ–∂–Ω–æ –ø–æ –Ω–æ–º–µ—Ä—É 8925 132 23 31 (–Ω–∞ –†–∞–π—Ñ –∏–ª–∏ –í–¢–ë) –ø–æ–ª—É—á–∞—Ç–µ–ª—å –î–∏–∞–Ω–∞ –í–ª–∞–¥–∏—Å–ª–∞–≤–æ–≤–Ω–∞ –ß.\n'
                        '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—Å–∏–º –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å –¥–ª—è —á–µ–≥–æ –ø–µ—Ä–µ–≤–æ–¥ –∏–ª–∏ –∫–∏–¥–∞—Ç—å –î–∏ –≤ –ª–∏—á–∫—É –¥–æ–∫—É–º–µ–Ω—Ç –ø–µ—Ä–µ–≤–æ–¥–∞ –∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å —á–æ –∫–∞–≤–æ))\n'
                        '–°–ø–∞—Å–∏–±–æ!')